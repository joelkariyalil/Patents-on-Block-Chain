services:
  streamlit:
    build: .
    container_name: patents_streamlit
    ports:
      - "8501:8501"
    environment:
      - DB_HOST=patents-db
      - DB_PORT=5432
      - DB_NAME=patents
      - DB_USER=patuser
      - DB_PASS=secret123
    depends_on:
      - patents-db
    restart: always

  patents-db:
    image: postgres:14
    container_name: patents_postgres
    environment:
      POSTGRES_DB: patents
      POSTGRES_USER: patents_username
      POSTGRES_PASSWORD: patents_password
    volumes:
      - pgdata_patents:/var/lib/postgresql/data
      - ./patentDB/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  agent-response-db:
    image: redis:latest
    container_name: patents_redis
    ports:
      - "6379:6379"
    restart: always

  ipfs-db:
    image: postgres:14
    container_name: ipfs_postgres
    environment:
      POSTGRES_DB: ipfs
      POSTGRES_USER: ipfs_username
      POSTGRES_PASSWORD: ipfs_password
    volumes:
      - pgdata_ipfs:/var/lib/postgresql/data
      - ./ipfsDB/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always

  ipfs-node:
    image: ipfs/go-ipfs:latest
    container_name: ipfs_node
    ports:
      - "4001:4001"    # swarm
      - "5001:5001"    # API
      - "8080:8080"    # gateway
    volumes:
      - ipfs_data:/data/ipfs
    restart: always

  ai-agent:
    build:
      context: ./ai-agent
    container_name: patents_ai_agent
    ports:
      - "8000:8000"
    depends_on:
      - agent-response-db  # Ensure Redis is up before AI agent starts
    restart: always

volumes:
  pgdata_patents:
  pgdata_ipfs:
  ipfs_data:
